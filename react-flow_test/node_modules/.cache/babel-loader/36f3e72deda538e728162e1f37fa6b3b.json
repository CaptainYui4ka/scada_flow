{"ast":null,"code":"var _jsxFileName = \"C:\\\\\\u0423\\u0447\\u0435\\u0431\\u0430\\\\project\\\\\\u0434\\u0438\\u043F\\u043B\\u043E\\u043C\\\\react-flow\\\\react-flow_test\\\\src\\\\react-flow-renderer\\\\line.jsx\";\nimport React from 'react';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport { Line } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = new WebSocket('ws://localhost:5000/', \"protocolOne\");\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nexport const options = {\n  responsive: true,\n  interaction: {\n    mode: 'index',\n    intersect: false\n  },\n  plugins: {\n    legend: {\n      position: 'top'\n    },\n    title: {\n      display: true,\n      text: 'Line Chart'\n    }\n  }\n};\nconst labels = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10'];\n\nfunction myMessage(event) {\n  let message = event.data;\n  console.log('есть сообщение');\n  const lineSignal = JSON.parse(message);\n  console.log(lineSignal);\n}\n\nsocket.onmessage = myMessage;\nconsole.log(myMessage.name);\nexport const data = {\n  labels,\n  datasets: [{\n    label: 'Dataset 1',\n    data: socket.onmessage = myMessage,\n    borderColor: 'blue',\n    backgroundColor: '#6BA7FF'\n  }, {\n    label: 'Dataset 2',\n    //data: [-20, -15, -10, -5, 0, 0, 10, 5, 25, 10],\n    borderColor: 'red',\n    backgroundColor: '#FF6B6B'\n  }]\n};\n\nconst LineChart = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: 700\n    },\n    children: /*#__PURE__*/_jsxDEV(Line, {\n      options: options,\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n\n_c = LineChart;\nexport default LineChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"LineChart\");","map":{"version":3,"sources":["C:/Учеба/project/диплом/react-flow/react-flow_test/src/react-flow-renderer/line.jsx"],"names":["React","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","Line","socket","WebSocket","register","options","responsive","interaction","mode","intersect","plugins","legend","position","title","display","text","labels","myMessage","event","message","data","console","log","lineSignal","JSON","parse","onmessage","name","datasets","label","borderColor","backgroundColor","LineChart","width"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,KAAK,IAAIC,OADX,EAEEC,aAFF,EAGEC,WAHF,EAIEC,YAJF,EAKEC,WALF,EAMEC,KANF,EAOEC,OAPF,EAQEC,MARF,QASO,UATP;AAUA,SAASC,IAAT,QAAqB,iBAArB;;AAEA,MAAMC,MAAM,GAAG,IAAIC,SAAJ,CAAc,sBAAd,EAAsC,aAAtC,CAAf;AAEAV,OAAO,CAACW,QAAR,CACEV,aADF,EAEEC,WAFF,EAGEC,YAHF,EAIEC,WAJF,EAKEC,KALF,EAMEC,OANF,EAOEC,MAPF;AAUA,OAAO,MAAMK,OAAO,GAAG;AACrBC,EAAAA,UAAU,EAAE,IADS;AAErBC,EAAAA,WAAW,EAAE;AACXC,IAAAA,IAAI,EAAE,OADK;AAEXC,IAAAA,SAAS,EAAE;AAFA,GAFQ;AAMrBC,EAAAA,OAAO,EAAE;AACPC,IAAAA,MAAM,EAAE;AACNC,MAAAA,QAAQ,EAAE;AADJ,KADD;AAIPC,IAAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAE,IADJ;AAELC,MAAAA,IAAI,EAAE;AAFD;AAJA;AANY,CAAhB;AAgBP,MAAMC,MAAM,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoC,GAApC,EAAyC,GAAzC,EAA8C,IAA9C,CAAf;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AACxB,MAAIC,OAAO,GAAGD,KAAK,CAACE,IAApB;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACA,QAAMC,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAWN,OAAX,CAAnB;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYC,UAAZ;AACD;;AACDrB,MAAM,CAACwB,SAAP,GAAmBT,SAAnB;AACAI,OAAO,CAACC,GAAR,CAAYL,SAAS,CAACU,IAAtB;AAEA,OAAO,MAAMP,IAAI,GAAG;AAClBJ,EAAAA,MADkB;AAElBY,EAAAA,QAAQ,EAAE,CACR;AACEC,IAAAA,KAAK,EAAE,WADT;AAEET,IAAAA,IAAI,EAAElB,MAAM,CAACwB,SAAP,GAAmBT,SAF3B;AAGEa,IAAAA,WAAW,EAAE,MAHf;AAIEC,IAAAA,eAAe,EAAE;AAJnB,GADQ,EAOR;AACEF,IAAAA,KAAK,EAAE,WADT;AAEE;AACAC,IAAAA,WAAW,EAAE,KAHf;AAIEC,IAAAA,eAAe,EAAE;AAJnB,GAPQ;AAFQ,CAAb;;AAmBP,MAAMC,SAAS,GAAG,MAAM;AACtB,sBACE;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAAZ;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,OAAO,EAAE5B,OAAf;AAAwB,MAAA,IAAI,EAAEe;AAA9B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAPD;;KAAMY,S;AASN,eAAeA,SAAf","sourcesContent":["import React from 'react'\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from 'chart.js';\r\nimport { Line } from 'react-chartjs-2';\r\n\r\nconst socket = new WebSocket('ws://localhost:5000/', \"protocolOne\");\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nexport const options = {\r\n  responsive: true,\r\n  interaction: {\r\n    mode: 'index',\r\n    intersect: false,\r\n  },\r\n  plugins: {\r\n    legend: {\r\n      position: 'top',\r\n    },\r\n    title: {\r\n      display: true,\r\n      text: 'Line Chart',\r\n    },\r\n  },\r\n};\r\nconst labels = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10'];\r\n\r\nfunction myMessage(event) {\r\n  let message = event.data;\r\n\r\n  console.log('есть сообщение')\r\n  const lineSignal = JSON.parse(message);\r\n  console.log(lineSignal);\r\n}\r\nsocket.onmessage = myMessage;\r\nconsole.log(myMessage.name);\r\n\r\nexport const data = {\r\n  labels,\r\n  datasets: [\r\n    {\r\n      label: 'Dataset 1',\r\n      data: socket.onmessage = myMessage,\r\n      borderColor: 'blue',\r\n      backgroundColor: '#6BA7FF'\r\n    },\r\n    {\r\n      label: 'Dataset 2',\r\n      //data: [-20, -15, -10, -5, 0, 0, 10, 5, 25, 10],\r\n      borderColor: 'red',\r\n      backgroundColor: '#FF6B6B'\r\n    },\r\n  ],\r\n};\r\n\r\n\r\nconst LineChart = () => {\r\n  return (\r\n    <div style={{ width: 700 }}>\r\n      <Line options={options} data={data} />\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LineChart;"]},"metadata":{},"sourceType":"module"}