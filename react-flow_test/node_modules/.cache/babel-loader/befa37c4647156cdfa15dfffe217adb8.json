{"ast":null,"code":"var _jsxFileName = \"C:\\\\\\u0423\\u0447\\u0435\\u0431\\u0430\\\\project\\\\\\u0434\\u0438\\u043F\\u043B\\u043E\\u043C\\\\react-flow\\\\react-flow_test\\\\src\\\\react-flow-renderer\\\\line.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport { Line } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = new WebSocket('ws://localhost:5000/', \"protocolOne\");\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nexport const options = {\n  responsive: true,\n  interaction: {\n    mode: 'index',\n    intersect: false\n  },\n  plugins: {\n    legend: {\n      position: 'top'\n    },\n    title: {\n      display: true,\n      text: 'График активности'\n    }\n  }\n};\n\nconst LineChart = () => {\n  _s();\n\n  const [linedate, setLine] = useState('');\n  const [linedate2, setLine2] = useState('');\n\n  socket.onmessage = function (event) {\n    var message = event.data;\n    console.log('есть сообщение');\n    const lineSignal = JSON.parse(message);\n    const lineSignal2 = JSON.parse(message);\n    console.log(lineSignal);\n    showMessage(lineSignal);\n    console.log(lineSignal2);\n  };\n\n  function showMessage(message) {\n    var messageSignal = document.createElement('div');\n    messageSignal.appendChild(document.createTextNode(message));\n    setLine(message);\n  }\n\n  console.log(linedate);\n  let endLinedate = linedate.length;\n  console.log(endLinedate); //Линейный график\n\n  const labels = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10'];\n  const data = {\n    labels,\n    datasets: [{\n      label: 'Сигнал 1',\n      data: linedate,\n      borderColor: 'blue',\n      backgroundColor: '#6BA7FF'\n    }, {\n      label: 'Сигнал 2',\n      data: [-20, -15, -10, -5, 0, 0, 10, 5, 25, 10],\n      borderColor: 'red',\n      backgroundColor: '#FF6B6B'\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: 700\n    },\n    children: /*#__PURE__*/_jsxDEV(Line, {\n      options: options,\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LineChart, \"zOiBgaro6CKx0m0+kN6a+Tajros=\");\n\n_c = LineChart;\nexport default LineChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"LineChart\");","map":{"version":3,"sources":["C:/Учеба/project/диплом/react-flow/react-flow_test/src/react-flow-renderer/line.jsx"],"names":["useState","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","Line","socket","WebSocket","register","options","responsive","interaction","mode","intersect","plugins","legend","position","title","display","text","LineChart","linedate","setLine","linedate2","setLine2","onmessage","event","message","data","console","log","lineSignal","JSON","parse","lineSignal2","showMessage","messageSignal","document","createElement","appendChild","createTextNode","endLinedate","length","labels","datasets","label","borderColor","backgroundColor","width"],"mappings":"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","sourcesContent":["import  { useState } from 'react'\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from 'chart.js';\r\nimport { Line } from 'react-chartjs-2';\r\n\r\nconst socket = new WebSocket('ws://localhost:5000/', \"protocolOne\");\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nexport const options = {\r\n  responsive: true,\r\n  interaction: {\r\n    mode: 'index',\r\n    intersect: false,\r\n  },\r\n  plugins: {\r\n    legend: {\r\n      position: 'top',\r\n    },\r\n    title: {\r\n      display: true,\r\n      text: 'График активности',\r\n    },\r\n  },\r\n};\r\n\r\n\r\nconst LineChart = () => {\r\n  \r\n  const [ linedate, setLine ] = useState('');\r\n  const [ linedate2, setLine2 ] = useState('');\r\n\r\n  socket.onmessage = function(event) {\r\n    var message = event.data;\r\n    console.log('есть сообщение')\r\n    const lineSignal = JSON.parse(message);\r\n    const lineSignal2 = JSON.parse(message);\r\n    console.log(lineSignal);\r\n    showMessage(lineSignal);\r\n    console.log(lineSignal2);\r\n  }\r\n  \r\n  function showMessage(message) {\r\n    var messageSignal = document.createElement('div');\r\n    messageSignal.appendChild(document.createTextNode(message));\r\n    setLine(message);\r\n  }\r\n  console.log(linedate);\r\n  let endLinedate = linedate.length;\r\n  console.log(endLinedate);\r\n\r\n  //Линейный график\r\n  const labels = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10'];\r\n  const data = {\r\n    labels ,\r\n    datasets: [\r\n      {\r\n        label: 'Сигнал 1',\r\n        data: linedate,\r\n        borderColor: 'blue',\r\n        backgroundColor: '#6BA7FF'\r\n      },\r\n      {\r\n        label: 'Сигнал 2',\r\n        data: [-20, -15, -10, -5, 0, 0, 10, 5, 25, 10],\r\n        borderColor: 'red',\r\n        backgroundColor: '#FF6B6B'\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <div style={{ width: 700 }}>\r\n      <Line options={options} data={data}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LineChart;"]},"metadata":{},"sourceType":"module"}